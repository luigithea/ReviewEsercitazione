1 Documentazione / Commenti

1.a Generare la documentazione usando Doxygen e verificare se la documentazione prodotta permette di orientarsi nella struttura del progetto software. Indicare i punti che potrebbero essere migliorati.
1.b Utilizzando la documentazione e i commenti inseriti nei file .ccp e .h verificare se il progetto software aderisce alle specifiche assegnate durante la prima settimana. Indicare le eventuali specifiche non rispettate.
1.c Verificare che il file README introduca correttamente lo scopo del progetto software e che dia sufficienti informazioni per un corretto uso dell’interfaccia a riga di comando. Indicare eventuali mancanze e/o possibili migliorie.

2 Compilazione e prima sessione di test

2.a Verificare se è possibile compilare il progetto 
2.b Test dell’interfaccia a riga di comando: l’interfaccia funziona correttamente? L’interfaccia è di facile utilizzo? Quali prove sono state eseguite per fare il test?

3 Seconda sessione di test

3.a Definire una procedura di test che permetta di identificare possibili bug nel codice prodotto per le singole classi e i singoli metodi di ogni classe
3.b Riportare i risultati del test





S5203046 Luigi Thea

1)
a. La documentazione permette di orientarsi. Segnalo tuttavia un possibile mia incomprensione, nella sottosezione delle classi compare due volte right_trapezoid. Il main.cpp non ha riportato alcun commento Doxy-Compatibile, tuttavia sono presenti i commenti classici delle variabili inizializzate.

b. Le specifiche vengono rispettate, i commenti mi paiono chiari e aderenti alle specifiche.
c. Il ReadMe introduce lo scopo correttamente. È sintetico ma efficace, mancano solo alcune informazioni sui parametri che l'utente può inserire.
2)
Il codice presenta  compila senza alcuna modifica o ritocco.

L'interfaccia funziona perfettamente, inoltre stampa anche la figura utilizzando la draw e varie righe di cout. L'interfaccia è molto intuitiva e il “BOX” in cui compaiono le possibilità di azione lasciate all'utente rende il tutto molto chiaro e leggibile.
La sessione di test si è composta di diverse prove:
La prima è  stata verificare che, se erroneamente inseriti i valori di scelta (tra i poligoni da creare) il codice rispoda correttamente rilevando l'errore e riponendo la richiesta

Per Seconda ho provato l'inserimento di valori negativi al codice


